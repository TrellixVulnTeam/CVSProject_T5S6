# Generated by Django 2.2.4 on 2019-11-13 14:38

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(max_length=70)),
                ('last_name', models.CharField(max_length=70)),
                ('middle_name', models.CharField(blank=True, max_length=70)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True, verbose_name='Email Address')),
                ('user_level', models.CharField(choices=[('student', 'Student'), ('admin', 'Administrator'), ('teacher', 'Teacher'), ('registrar', 'Registrar'), ('cm', 'Content Moderator')], max_length=15, verbose_name='User Level')),
                ('is_student', models.BooleanField(default=False, verbose_name='Student')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='Administrator')),
                ('is_teacher', models.BooleanField(default=False, verbose_name='Teacher')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Staff')),
                ('is_registrar', models.BooleanField(default=False, verbose_name='Registrar')),
                ('is_content_moderator', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='StaffProfile',
            fields=[
                ('user', models.OneToOneField(limit_choices_to=models.Q(is_staff=True), on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='user_staffprofile', serialize=False, to=settings.AUTH_USER_MODEL)),
                ('employee_number', models.CharField(max_length=20, null=True)),
                ('mobile_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('address', models.TextField(blank=True, max_length=300)),
            ],
        ),
    ]
